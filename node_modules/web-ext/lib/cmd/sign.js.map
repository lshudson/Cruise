{"version":3,"file":"sign.js","names":["path","fs","signAddon","defaultAddonSigner","defaultBuilder","isErrorWithCode","UsageError","WebExtError","prepareArtifactsDir","createLogger","getValidatedManifest","getManifestId","defaultSubmitAddonSigner","saveIdToFile","withTempDir","log","import","meta","url","defaultAsyncFsReadFile","readFile","bind","extensionIdFile","sign","amoBaseUrl","apiKey","apiProxy","apiSecret","apiUrlPrefix","useSubmissionApi","artifactsDir","id","ignoreFiles","sourceDir","timeout","verbose","channel","amoMetadata","build","preValidatedManifest","submitAddon","asyncFsReadFile","tmpDir","manifestData","savedIdPath","join","buildResult","idFromSourceDir","Promise","all","showReadyMessage","getIdFromFile","manifestId","debug","info","warn","metaDataJson","metadataFileBuffer","JSON","parse","toString","err","signSubmitArgs","xpiPath","extensionPath","downloadDir","result","success","newId","downloadedFiles","version","Error","clientError","message","filePath","content","error","lines","split","filter","line","trim","startsWith"],"sources":["../../src/cmd/sign.js"],"sourcesContent":["/* @flow */\nimport path from 'path';\n\nimport {fs} from 'mz';\nimport {signAddon as defaultAddonSigner} from 'sign-addon';\n\nimport defaultBuilder from './build.js';\nimport {isErrorWithCode, UsageError, WebExtError} from '../errors.js';\nimport {prepareArtifactsDir} from '../util/artifacts.js';\nimport {createLogger} from '../util/logger.js';\nimport getValidatedManifest, {getManifestId} from '../util/manifest.js';\nimport type {ExtensionManifest} from '../util/manifest.js';\nimport {\n  signAddon as defaultSubmitAddonSigner,\n  saveIdToFile,\n} from '../util/submit-addon.js';\nimport type { SignResult } from '../util/submit-addon.js';\nimport {withTempDir} from '../util/temp-dir.js';\n\nexport type { SignResult };\n\nconst log = createLogger(import.meta.url);\n\nconst defaultAsyncFsReadFile: (string) => Promise<Buffer> =\n  fs.readFile.bind(fs);\n\nexport const extensionIdFile = '.web-extension-id';\n\n// Sign command types and implementation.\n\nexport type SignParams = {|\n  amoBaseUrl: string,\n  apiKey: string,\n  apiProxy?: string,\n  apiSecret: string,\n  apiUrlPrefix: string,\n  useSubmissionApi?: boolean,\n  artifactsDir: string,\n  id?: string,\n  ignoreFiles?: Array<string>,\n  sourceDir: string,\n  timeout: number,\n  verbose?: boolean,\n  channel?: string,\n  amoMetadata?: string,\n|};\n\nexport type SignOptions = {\n  build?: typeof defaultBuilder,\n  signAddon?: typeof defaultAddonSigner,\n  submitAddon?: typeof defaultSubmitAddonSigner,\n  preValidatedManifest?: ExtensionManifest,\n  shouldExitProgram?: boolean,\n  asyncFsReadFile?: typeof defaultAsyncFsReadFile,\n};\n\nexport default function sign(\n  {\n    amoBaseUrl,\n    apiKey,\n    apiProxy,\n    apiSecret,\n    apiUrlPrefix,\n    useSubmissionApi = false,\n    artifactsDir,\n    id,\n    ignoreFiles = [],\n    sourceDir,\n    timeout,\n    verbose,\n    channel,\n    amoMetadata,\n  }: SignParams,\n  {\n    build = defaultBuilder,\n    preValidatedManifest,\n    signAddon = defaultAddonSigner,\n    submitAddon = defaultSubmitAddonSigner,\n    asyncFsReadFile = defaultAsyncFsReadFile,\n  }: SignOptions = {}\n): Promise<SignResult> {\n  return withTempDir(\n    async function(tmpDir) {\n      await prepareArtifactsDir(artifactsDir);\n\n      let manifestData;\n      const savedIdPath = path.join(sourceDir, extensionIdFile);\n\n      if (preValidatedManifest) {\n        manifestData = preValidatedManifest;\n      } else {\n        manifestData = await getValidatedManifest(sourceDir);\n      }\n\n      const [buildResult, idFromSourceDir] = await Promise.all([\n        build({sourceDir, ignoreFiles, artifactsDir: tmpDir.path()},\n              {manifestData, showReadyMessage: false}),\n        getIdFromFile(savedIdPath),\n      ]);\n\n      const manifestId = getManifestId(manifestData);\n\n      if (useSubmissionApi && id && !manifestId) {\n        throw new UsageError(\n          `Cannot set custom ID ${id} - addon submission API requires a ` +\n          'custom ID be specified in the manifest'\n        );\n      }\n      if (useSubmissionApi && idFromSourceDir && !manifestId) {\n        throw new UsageError(\n          'Cannot use previously auto-generated extension ID ' +\n          `${idFromSourceDir} - addon submission API ` +\n          'requires a custom ID be specified in the manifest'\n        );\n      }\n      if (id && manifestId) {\n        throw new UsageError(\n          `Cannot set custom ID ${id} because manifest.json ` +\n          `declares ID ${manifestId}`);\n      }\n      if (id) {\n        log.debug(`Using custom ID declared as --id=${id}`);\n      }\n\n      if (manifestId) {\n        id = manifestId;\n      }\n\n      if (!id && idFromSourceDir) {\n        log.info(\n          `Using previously auto-generated extension ID: ${idFromSourceDir}`);\n        id = idFromSourceDir;\n      }\n\n      if (!id) {\n        log.warn('No extension ID specified (it will be auto-generated)');\n      }\n\n      if (useSubmissionApi && !channel) {\n        throw new UsageError(\n          'channel is a required parameter for the addon submission API'\n        );\n      }\n\n      if (useSubmissionApi && apiProxy) {\n        // https://github.com/mozilla/web-ext/issues/2472\n        throw new UsageError(\n          \"apiProxy isn't yet supported for the addon submission API. \" +\n          'See https://github.com/mozilla/web-ext/issues/2472'\n        );\n      }\n\n      let metaDataJson;\n      if (amoMetadata) {\n        const metadataFileBuffer = await asyncFsReadFile(amoMetadata);\n        try {\n          metaDataJson = JSON.parse(metadataFileBuffer.toString());\n        } catch (err) {\n          throw new UsageError('Invalid JSON in listing metadata');\n        }\n      }\n\n      const signSubmitArgs = {\n        apiKey,\n        apiSecret,\n        timeout,\n        id,\n        xpiPath: buildResult.extensionPath,\n        downloadDir: artifactsDir,\n        channel,\n      };\n\n      let result;\n      try {\n        if (useSubmissionApi) {\n          result = await submitAddon({\n            ...signSubmitArgs,\n            amoBaseUrl,\n            // $FlowIgnore: we verify 'channel' is set above\n            channel,\n            savedIdPath,\n            metaDataJson,\n          });\n        } else {\n          const { success, id: newId, downloadedFiles } = await signAddon({\n            ...signSubmitArgs,\n            apiUrlPrefix,\n            apiProxy,\n            verbose,\n            version: manifestData.version,\n          });\n          if (!success) {\n            throw new Error('The extension could not be signed');\n          }\n          result = { id: newId, downloadedFiles };\n          // All information about the downloaded files would have already been\n          // logged by signAddon(). submitAddon() calls saveIdToFile itself.\n          await saveIdToFile(savedIdPath, newId);\n          log.info(`Extension ID: ${newId}`);\n          log.info('SUCCESS');\n        }\n      } catch (clientError) {\n        log.info('FAIL');\n        throw new WebExtError(clientError.message);\n      }\n\n      return result;\n    });\n}\n\n\nexport async function getIdFromFile(\n  filePath: string,\n  asyncFsReadFile: typeof defaultAsyncFsReadFile = defaultAsyncFsReadFile,\n): Promise<string | void> {\n  let content;\n\n  try {\n    content = await asyncFsReadFile(filePath);\n  } catch (error) {\n    if (isErrorWithCode('ENOENT', error)) {\n      log.debug(`No ID file found at: ${filePath}`);\n      return;\n    }\n    throw error;\n  }\n\n  let lines = content.toString().split('\\n');\n  lines = lines.filter((line) => {\n    line = line.trim();\n    if (line && !line.startsWith('#')) {\n      return line;\n    }\n  });\n\n  const id = lines[0];\n  log.debug(`Found extension ID ${id} in ${filePath}`);\n\n  if (!id) {\n    throw new UsageError(`No ID found in extension ID file ${filePath}`);\n  }\n\n  return id;\n}\n"],"mappings":"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"}